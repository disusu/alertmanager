// Code generated by go-swagger; DO NOT EDIT.

// Copyright Prometheus Team
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package alertsls

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// PostslsAlertsOKCode is the HTTP code returned for type PostslsAlertsOK
const PostslsAlertsOKCode int = 200

/*PostslsAlertsOK Create alerts response

swagger:response postslsAlertsOK
*/
type PostslsAlertsOK struct {
}

// NewPostslsAlertsOK creates PostslsAlertsOK with default headers values
func NewPostslsAlertsOK() *PostslsAlertsOK {

	return &PostslsAlertsOK{}
}

// WriteResponse to the client
func (o *PostslsAlertsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// PostslsAlertsBadRequestCode is the HTTP code returned for type PostslsAlertsBadRequest
const PostslsAlertsBadRequestCode int = 400

/*PostslsAlertsBadRequest Bad request

swagger:response postslsAlertsBadRequest
*/
type PostslsAlertsBadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPostslsAlertsBadRequest creates PostslsAlertsBadRequest with default headers values
func NewPostslsAlertsBadRequest() *PostslsAlertsBadRequest {

	return &PostslsAlertsBadRequest{}
}

// WithPayload adds the payload to the postsls alerts bad request response
func (o *PostslsAlertsBadRequest) WithPayload(payload string) *PostslsAlertsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the postsls alerts bad request response
func (o *PostslsAlertsBadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostslsAlertsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PostslsAlertsInternalServerErrorCode is the HTTP code returned for type PostslsAlertsInternalServerError
const PostslsAlertsInternalServerErrorCode int = 500

/*PostslsAlertsInternalServerError Internal server error

swagger:response postslsAlertsInternalServerError
*/
type PostslsAlertsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPostslsAlertsInternalServerError creates PostslsAlertsInternalServerError with default headers values
func NewPostslsAlertsInternalServerError() *PostslsAlertsInternalServerError {

	return &PostslsAlertsInternalServerError{}
}

// WithPayload adds the payload to the postsls alerts internal server error response
func (o *PostslsAlertsInternalServerError) WithPayload(payload string) *PostslsAlertsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the postsls alerts internal server error response
func (o *PostslsAlertsInternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostslsAlertsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
